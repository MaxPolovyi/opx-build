#!/bin/bash
#
# Copyright (c) 2015 Dell Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT
# LIMITATION ANY IMPLIED WARRANTIES OR CONDITIONS OF TITLE, FITNESS
# FOR A PARTICULAR PURPOSE, MERCHANTABLITY OR NON-INFRINGEMENT.
#
# See the Apache Version 2.0 License for specific language governing
# permissions and limitations under the License.
#

which docker 2>/dev/null >&2

if [ ! $? = 0 ] ; then
  echo "You will need to install docker for this to work."
  exit 1
fi

ID=$(docker ps -f ancestor=docker-opx:latest --format "{{.ID}}")

if [ "${ID}b" = b ] ; then
  CIDFILE=id

  # As of this writing, commands requiring elevated privileges can't
  # be executed from within a Dockerfile. To work around this, first
  # create a base image, then the run privileged commands required to
  # finish provisioning it, finally tag the fully provisioned image.
  #
  # Cf. https://github.com/docker/docker/issues/1916

  docker build -t docker-opx:base -f opx_build_Dockerfile .

  # Create the pbuilder chroot. For unexplained reasons, the apt-utils
  # package is not installed in the chroot even though it is listed in
  # EXTRAPACKAGES in /etc/pbuilderrc. However, it is installed with a
  # subsequent "git-pbuilder update"
  rm -f ${CIDFILE}
  docker run --cidfile ${CIDFILE} --privileged -e DIST=jessie docker-opx:base sh -c 'git-pbuilder create; git-pbuilder update'
  docker commit --change 'CMD ["bash"]' `cat ${CIDFILE}` docker-opx:stamp1
  docker rm `cat ${CIDFILE}`

  # pyang is not (yet) available as a debian package, these steps
  # install it in the pbuilder chroot.
  rm -f ${CIDFILE}
  docker run --cidfile ${CIDFILE} --privileged -e DIST=jessie docker-opx:stamp1 sh -c 'echo "apt-get install -y python-pip; pip install pyang; ln -s /usr/local/bin/pyang /usr/bin" | git-pbuilder login --save-after-login'
  docker commit --change 'CMD ["bash"]' `cat ${CIDFILE}` docker-opx:latest
  docker rm `cat ${CIDFILE}`

  # cleanup
  rm -f ${CIDFILE}
  docker rmi docker-opx:base
  docker rmi docker-opx:stamp1
fi

echo "OPX Docker Image"
docker ps -f ancestor=docker-opx:latest
